- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: "vpc_{{ cluster_name }}"
    cidr_block: "{{ vpc_cidr }}"
    dns_hostnames: true
    dns_support: true
    state: "present"
    region: "{{ aws_region }}"
  register: vpc

- name: Create Internet Gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc.id }}"
    state: "present"
    region: "{{ aws_region }}"
  register: igw

- name: Create Subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    state: "present"
    region: "{{ aws_region }}"
    map_public: true
  with_items: "{{ public_subnets + private_subnets }}"
  register: subnets

- name: Create Route Table for Public Subnets
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc.vpc.id }}"
    state: "present"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ cluster_name }}"
    subnets: "{{ subnets.results | map(attribute='subnet.id') | list }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw.gateway_id }}"
  register: route_table

- name: Create Security Group for EKS Cluster
  amazon.aws.ec2_security_group:
    name: "{{ cluster_name }}-eks-sg"
    description: "Security Group for {{ cluster_name }} EKS Cluster"
    vpc_id: "{{ vpc.vpc.id }}"
    state: "present"
    rules:  
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "{{ vpc_cidr }}"
        rule_desc: "Allow HTTP"
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ vpc_cidr }}"
        rule_desc: "Allow SSH"
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: "{{ vpc_cidr }}"
        rule_desc: "Allow HTTPS"
    rules_egress:
      - proto: all
        from_port: 0
        to_port: 0
        cidr_ip: 0.0.0.0/0
  register: security_group